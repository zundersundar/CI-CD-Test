name: CI/CD Pipeline for Heimdall

on:
  push:
    paths:
      - './heimdall/**'      
  workflow_dispatch: 

jobs:
  lint-and-test:
    name: Lint, Security Check, and Test Python Backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r dev-requirements.txt


      - name: Install Dependencies
        working-directory: ./heimdall
        run: pip install -r requirements.txt

      - name: Run Pylint
        working-directory: ./heimdall
        run: pylint **/*.py || true

      - name: Install Vulture
        working-directory: ./heimdall
        run: pip install vulture

      - name: Run Vulture
        run: vulture . --min-confidence 80 || true # Adjust confidence level as needed
 
   #   - name: Upload Vulture Report
   #     if: always()
   #     run: |
   #      vulture . > vulture_report.txt
   #      artifacts:
   #      name: vulture-report
   #      path: vulture_report.txt

      - name: Run Bandit
        working-directory: ./heimdall
        run: bandit -r . || true

      - name: Run Unittests
        working-directory: ./heimdall
        run: python -m unittest discover || true

  build-push-and-deploy:
    name: Build, Push Docker Image, and Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: lint-and-test

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

        
      - name: Build Docker Image
        working-directory: ./heimdall
        run: |
          IMAGE_TAG=${GITHUB_SHA:0:7}
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.HEIMDALL }}:heimdall-$IMAGE_TAG .

      - name: Push Docker Image to ECR
        run: |
          IMAGE_TAG=${GITHUB_SHA:0:7}
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.HEIMDALL }}:heimdall-$IMAGE_TAG

      - name: Update HEIMDALL Deployment file
        working-directory: ./manifests
        run: |
          IMAGE_TAG=${GITHUB_SHA:0:7}
          IMAGE_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.HEIMDALL }}:heimdall-$IMAGE_TAG

          sed -i "s|image: .*|image: $IMAGE_URI|g" heimdall-deployment.yml
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git pull
          git add heimdall-deployment.yml
          git commit -m "Update deployment image to $IMAGE_URI"

      - name: Push Changes
        run: |
          git push origin ${{ github.ref }}
