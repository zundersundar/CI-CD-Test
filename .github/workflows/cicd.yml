name: CI/CD Controller Workflow

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  distribute-triggers:
    name: Distribute Triggers to Module Workflows
    runs-on: ubuntu-latest

    steps:
      - name: Determine Changed Modules
        id: changed-modules
        run: |
          MODULES=""
          if git diff --name-only HEAD~1 HEAD | grep -q '^frontend/'; then
            MODULES="$MODULES frontend"
          fi
          if git diff --name-only HEAD~1 HEAD | grep -q '^mysql_ingestor/'; then
            MODULES="$MODULES mysql_ingestor"
          fi
          
          if git diff --name-only HEAD~1 HEAD | grep -q '^mqtt/'; then
            MODULES="$MODULES mqtt"
          
          fi 
          
          if git diff --name-only HEAD~1 HEAD | grep -q '^jarvis/'; then
            MODULES="$MODULES jarvis"

          fi
          
          if git diff --name-only HEAD~1 HEAD | grep -q '^heimdall/'; then
            MODULES="$MODULES heimdall"

          fi
          
          if git diff --name-only HEAD~1 HEAD | grep -q '^influxdb_ingestor/'; then
            MODULES="$MODULES influxdb_ingestor"
          fi
          echo "::set-output name=modules::$MODULES"

      - name: Trigger Frontend Workflow
        if: contains(steps.changed-modules.outputs.modules, 'frontend')
        uses: actions/github-script@v6
        with:
          script: |
            const [owner, repo] = process.env.GITHUB_REPOSITORY.split("/");
            await github.actions.createWorkflowDispatch({
              owner,
              repo,
              workflow_id: "ci_cd_react_ecr.yml",
              ref: "main"
            });

      - name: Trigger Backend Workflow
        if: contains(steps.changed-modules.outputs.modules, 'backend')
        uses: actions/github-script@v6
        with:
          script: |
            const [owner, repo] = process.env.GITHUB_REPOSITORY.split("/");
            await github.actions.createWorkflowDispatch({
              owner,
              repo,
              workflow_id: "ci_cd_python_ecr.yml",
              ref: "main"
            });

