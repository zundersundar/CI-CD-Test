name: Tower-Watch CI/CD Pipeline

on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - main

jobs:
  sanity-check:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      # Frontend Analysis
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install frontend dependencies
        run: cd frontend && npm install

     # - name: Run ESLint
     #   run: cd frontend && npx eslint . --ext .js,.jsx

     # - name: Run frontend tests
     #   run: cd frontend && npm test -- --coverage --watchAll=false

      # Backend Analysis
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.12'

      - name: Install backend dependencies
        run: cd backend && pip install -r requirements.txt

      - name: Run Flake8
        run: cd backend && flake8 .

      - name: Run Bandit Security Scan
        run: cd backend && bandit -r .

      - name: Run backend tests
        run: cd backend && pytest --cov=.

  deploy:
    runs-on: ubuntu-latest
    needs: sanity-check
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Copy files to EC2
        run: |
          scp -o StrictHostKeyChecking=no -r . ubuntu@${{ secrets.EC2_HOST }}:/home/ubuntu/app

      - name: Deploy on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
          cd /home/ubuntu/app
          docker-compose down
          docker-compose up -d --build
          EOF
